[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fedrag"
version = "1.0.0"
description = ""
license = "Apache-2.0"
dependencies = [
    "flwr[simulation]>=1.19.0",
    "numpy>=1.26.0,<2",
    "tqdm>=4.67",
    "sentence_transformers>=3.4.1",
]

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.flwr.app]
publisher = "dimitris"

[tool.flwr.app.components]
serverapp = "src.fedrag.server_app:app"
clientapp = "src.fedrag.client_app:app"

[tool.flwr.app.config]
# Possible question answer datasets: PubMedQA, BioASQ, MMLU, MedQA, MedMCQA
# you can pass them as follows: "pubmedqa|bioasq|mmlu|medqa|medmcqa"
# the vertical bar separates the different benchmark datasets
server-qa-datasets = "pubmedqa|bioasq"
# Force to only evaluate the first 10 questions from each benchmark
# dataset, if this value is not set, then evaluate all questions
server-qa-num = 1
# Pass corpus as "StatPearls|Textbooks", the corpus will be assigned
# to each client participating in the federation in a Round-Robin fashion
# The supported corpora are:
# PubMed (23.9M docs), StatPearls (9.3k docs), Textbooks (18 docs), Wikipedia (6.5M docs)
# you can pass them as follows: "pubmed|statpearls|textbooks|wikipedia"
# the vertical bar separates the different corpus
clients-corpus-names = "textbooks"
# The value of the Reciprocal Rank Fusion. The value will be used
# to merge multiple documents together at the server-side
# If the value is not set then only the retrieval scores are considered
k-rrf = 60
# The k-nearest-neighbor (most relevant) documents to the given search query
# used by clients to retrieve top-k relevant documents and at the server
# to select the final top-k documents after the merge operation
k-nn = 8
# The LLM used by the server to execute the RAG query.
# We assign the Hugging Face name of the LLM,
# e.g., "meta-llama/Llama-3.2-1B-Instruct" or "meta-llama/Meta-Llama-3-8B-Instruct"
# By default, we use Hugging Face's SmolLM2-1.7B model. For Llama models, please
# ensure that you have accepted the terms and conditions, and have been granted access to the model.
server-llm-hfpath = "meta-llama/Meta-Llama-3-8B-Instruct"
# Whether the server should use a GPU to load the llm and run the inference
server-llm-use-gpu = "true"
batch-size = 1

server-rerank-hfpath = "BAAI/bge-reranker-base"
[tool.flwr.federations]
default = "local-simulation"

[tool.flwr.federations.local-simulation]
options.num-supernodes = 1
options.backend.client-resources.num-cpus = 1
options.backend.client-resources.num-gpus = 0
